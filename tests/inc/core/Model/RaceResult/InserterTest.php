<?php

namespace Runalyze\Model\RaceResult;

use PDO;
use DB;

/**
 * Generated by hand
 */
class InserterTest extends \PHPUnit_Framework_TestCase {

	/**
	 * @var \PDO
	 */
	protected $PDO;

	/**
	 * @var int
	 */
	protected $Typeid;

	protected function setUp() {
		$this->PDO = DB::getInstance();
		$this->PDO->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
	}

	protected function tearDown() {
		$this->PDO->exec('DELETE FROM `'.PREFIX.'raceresult`');
	}

	public function testSimpleInsert() {
		$RaceResult = new Entity(array(
			Entity::OFFICIAL_DISTANCE => '10.50',
			Entity::OFFICIAL_TIME => 2400,
			Entity::OFFICIALLY_MEASURED => '10',
			Entity::PLACE_TOTAL => '10',
			Entity::PLACE_GENDER => '25',
			Entity::PLACE_AGECLASS => '4',
			Entity::PARTICIPANTS_TOTAL => '1033',
			Entity::PARTICIPANTS_GENDER => '100',
			Entity::PARTICIPANTS_AGECLASS => '15',
			Entity::ACTIVITY_ID => 2
		));

		$Inserter = new Inserter($this->PDO, $RaceResult);
		$Inserter->setAccountID(1);
		$Inserter->insert();

		$data = $this->PDO->query("SELECT * FROM `".PREFIX."raceresult` WHERE activity_id='".$RaceResult->activityId()."'")->fetch(PDO::FETCH_ASSOC);
		$New = new Entity($data);

		$this->assertEquals(10.50, $RaceResult->officialDistance());
		$this->assertEquals(2400, $RaceResult->officialTime());
		$this->assertEquals(10, $RaceResult->officiallyMeasured());
		$this->assertEquals(10, $RaceResult->placeTotal());
		$this->assertEquals(25, $RaceResult->placeGender());
		$this->assertEquals(4, $RaceResult->placeAgeclass());
		$this->assertEquals(1033, $RaceResult->participantsTotal());
		$this->assertEquals(100, $RaceResult->participantsGender());
		$this->assertEquals(15, $RaceResult->participantsAgeclass());
		$this->assertEquals(2, $RaceResult->activityId());
	}

}
