<?php

namespace Runalyze\Parameter\Application;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2014-09-15 at 20:35:10.
 */
class WeekStartTest extends \PHPUnit_Framework_TestCase {

	/**
	 * @var \Runalyze\Parameter\Application\WeekStart
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp() {
		$this->object = new WeekStart;
	}

	public function testNoneSet() {
		$this->assertTrue( $this->object->isMonday() );
                $this->assertEquals( 1, $this->object->value() );
		$this->assertFalse( $this->object->isSaturday() );
                $this->assertFalse( $this->object->isSunday() );
        }
        
        public function testMonday() {                
		$this->object->set( WeekStart::MONDAY );
                $this->assertEquals( 1, $this->object->value() );
		$this->assertTrue( $this->object->isMonday() );
		$this->assertFalse( $this->object->isSaturday() );
                $this->assertFalse( $this->object->isSunday() );
        }
        
        public function testSunday() {
		$this->object->set( WeekStart::SUNDAY );
                $this->assertEquals( 0, $this->object->value() );
		$this->assertFalse( $this->object->isMonday() );
		$this->assertFalse( $this->object->isSaturday() );
                $this->assertTrue( $this->object->isSunday() );
	}

	public function testWeekNumberForMonday() {
		$this->object->set(WeekStart::MONDAY);

		$this->assertEquals(44, $this->object->phpWeek(strtotime("26 October 2015")));
		$this->assertEquals(44, $this->object->phpWeek(strtotime("1 November 2015")));
		$this->assertEquals(45, $this->object->phpWeek(strtotime("2 November 2015")));
		$this->assertEquals(45, $this->object->phpWeek(strtotime("8 November 2015")));
		$this->assertEquals(53, $this->object->phpWeek(strtotime("3 January 2016")));
	}

	public function testWeekNumberForSunday() {
		$this->object->set(WeekStart::SUNDAY);

		$this->assertEquals(44, $this->object->phpWeek(strtotime("26 October 2015")));
		$this->assertEquals(45, $this->object->phpWeek(strtotime("1 November 2015")));
		$this->assertEquals(45, $this->object->phpWeek(strtotime("2 November 2015")));
		$this->assertEquals(46, $this->object->phpWeek(strtotime("8 November 2015")));
		$this->assertEquals(1, $this->object->phpWeek(strtotime("3 January 2016")));
	}

}
